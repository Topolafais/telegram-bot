import telebot
import os

TOKEN = os.environ.get("TOKEN")
bot = telebot.TeleBot(TOKEN)

BAN_FILE = "ban_reasons.txt"
WARN_FILE = "warns.txt"
ADMIN_CHAT_FILE = "admin_group.txt"
user_chat_sessions = {}
active_user_id = None

ROONYA = 599492177
DARLIN = 1603464587
ADMIN_LIST = [ROONYA, DARLIN, 5771401595]

def is_admin(message):
    return message.from_user.id in ADMIN_LIST

def is_owner(user_id):
    return user_id in [ROONYA, DARLIN]

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id,
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –±–æ—Ç –ª–æ–≥–æ–≤–∞ –∫—Ä–æ–ª–∏–∫–∞.\n\n"
        "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º:\n"
        "‚Ä¢ –£–∑–Ω–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É –≤–∞—à–µ–≥–æ –±–∞–Ω–∞\n"
        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n"
        "‚Ä¢ –ü–æ–¥–∞—Ç—å –∞–ø–µ–ª–ª—è—Ü–∏—é\n"
        "‚Ä¢ –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n\n"
        "üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /commands, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏."
    )

@bot.message_handler(commands=['rules'])
def rules(message):
    bot.send_message(message.chat.id,
        "üìã –ü—Ä–∞–≤–∏–ª–∞ \n \n"
        "[1] ‚Äî –ë–µ–∑ —Ä–µ–∫–ª–∞–º—ã (–≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ —Å—Å—ã–ª–æ–∫. –°—Å—ã–ª–∫–∏ –Ω–∞ –ª–∞–π–∫,—Ç–∏–∫-—Ç–æ–∫,—é—Ç—É–± —à–æ—Ä—Ç - –†–ê–ó–†–ï–®–ï–ù–´. –ü–∏—Å–∞—Ç—å —Å–æ —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —á–∞—Ç–µ - –ó–ê–ü–†–ï–©–ï–ù–û). \n"
        "[2] ‚Äî –ë–µ–∑ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π. \n"
        "[3] ‚Äî –ë–µ–∑ –≤—ã–¥–∞—á–∏ —Å–µ–±—è –∑–∞ –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ ( –Ω–∏–∫–∏ –∞–∫—Ç√´—Ä–æ–≤ –∏ –†—É–Ω–∏). \n" 
        "[4] ‚Äî –ë–µ–∑ —Å—Å–æ—Ä. \n" 
        "[5] ‚Äî –ë–µ–∑ —Ñ–ª—É–¥–∞ –∏ —Å–ø–∞–º–∞. \n" 
        "[6] ‚Äî –ë–µ–∑ 18+ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–í–∏–¥–µ–æ, –∫–∞—Ä—Ç–∏–Ω–∫–∏, —Å–ª–æ–≤–∞). \n"
        "[7] ‚Äî –ë–µ–∑ –¥–µ–∑–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –≤–≤–µ–¥–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ –≤ –∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ. \n" 
        "[8] ‚Äî –ë–µ–∑ –≥—Ä–æ–º–∫–∏—Ö —à—É–º–æ–≤ –≤ –≥—Å, –∫—Ä—É–∂–æ—á–∫–∞—Ö –∏ –≤–∏–¥–µ–æ. \n"
        "[9] ‚Äî –ë–µ–∑ —Å–∫—Ä–∏–º–µ—Ä–æ–≤. (–ü—É–≥–∞—é—â–∏–µ —Å—Ç—Ä–∞—à–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –≤–∏–¥–µ–æ) \n" 
        "[10] ‚Äî –ë–µ–∑ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏. \n"
        "[11] ‚Äî –ù–µ –≥–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–æ –ü—É—Ñ–∞. \n"
        "[12] ‚Äî –ù–µ —Ç–µ–≥–∞—Ç—å –∞–∫—Ç—ë—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–æ–≤ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã. \n"
        "[13] ‚Äî –ù–µ–∞–¥–µ–∫–≤–∞—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ - –∑–∞–ø—Ä–µ—â–µ–Ω–æ. \n"
        "[14] ‚Äî –ë–µ–∑ —à–æ–∫–∏—Ä—É—é—â–∏—Ö –∫–∞–¥—Ä–æ–≤ (–∫—Ä–æ–≤–∏, —Ä–∞–Ω, –ø–æ—Ä–µ–∑–æ–≤). \n" 
        "[15] - –ë–µ–∑ —Å–ª–∏–≤–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. (–†–∞–∑–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —á–µ–ª–æ–≤–µ–∫–µ –±–µ–∑ –µ–≥–æ –Ω–∞ —Ç–æ —Å–æ–≥–ª–∞—Å–∏—è, —É–¥–∞–ª—ë–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –†—É–Ω–∏.) \n" 
        "[16] - –ë–µ–∑ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–æ—Å–æ–≤ –†—É–Ω–∏ –≤ –∫–∞–Ω–∞–ª—ã, –≤ –ª—Å –∏ —Ç–¥. –°–º–æ—Ç—Ä–∏–º —Ç–æ–ª—å–∫–æ –Ω–∞ —é—Ç—É–±–µ. \n \n" 

        "–ù–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ - –±–∞–Ω (–ù–ê–í–°–ï–ì–î–ê). –í—ã–¥–∞√´—Ç—Å—è –æ—Ç 3-—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π ( —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ: –ø—Ä–µ–¥–æ–≤). –û–±—Ö–æ–¥ –±–∞–Ω–∞ –∫–∞—Ä–∞–µ—Ç—Å—è –±–∞–Ω–æ–º. \n \n" 

        "2. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞: \n"
        "2.1 P.s: –Ω–µ –∑–ª–∏ –∞–¥–º–∏–Ω–æ–≤..(–±—É–¥–µ—Ç –ø–ª–æ—Ö–æ..). \n"
        "2.2 P.s: –Ω–µ –æ–±–∑—ã–≤–∞–π –∂/–º –ø–æ–ª.(–±—É–¥–µ—Ç –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ..). \n" 
        "3.2 P.s: –Ω–µ –æ–±–∑—ã–≤–∞–π –≥–æ–ª–æ—Å–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤..(–±—É–¥–µ—Ç —Å–ª–∏—à–∫–æ–º –ø–ª–æ—Ö–æ..). \n"
        "4.2 P.s: –∞–¥–º–∏–Ω–æ–≤ –µ—Å—Ç—å –Ω–µ–ª—å–∑—è^^... \n"
        "5.2 P.s: —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∂–µ–Ω–∏—Ç—å –∏ —Ä–∞–∑–≤–æ–¥–∏—Ç—å –ª—é–¥–µ–π. \n"
    )

@bot.message_handler(commands=['commands'])
def command_list_user(message):
    bot.send_message(message.chat.id,
        "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/id - –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—à Telegram ID\n"
        "/ban_reason - —É–∑–Ω–∞—Ç—å, –ø–æ—á–µ–º—É –≤—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã\n"
        "/get_warns <ID> - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "/contact_admin - –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n"
        "/stop_admin_chat - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä"
    )

@bot.message_handler(commands=['id'])
def get_id(message):
    bot.send_message(message.chat.id, f"üÜî Your ID: {message.from_user.id}")

# ========= –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞ =========
@bot.message_handler(commands=['admin_commands'])
def admin_commands(message):
    if not is_admin(message):
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    bot.send_message(message.chat.id,
        "üîß –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: \n"
        "/add_admin <ID> - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        "/remove_admin <ID> - —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        "/admin_list - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n"
        "/ban <ID> <–ø—Ä–∏—á–∏–Ω–∞> - –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "/save_ban_reason - –≤—Ä—É—á–Ω—É—é —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É –±–∞–Ω–∞\n"
        "/ban_reason - –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É –±–∞–Ω–∞ –ø–æ ID\n"
        "/delete_ban_reason - —É–¥–∞–ª–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É –±–∞–Ω–∞ –ø–æ ID\n"
        "/ban_list - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–∞–Ω–æ–≤\n"
        "/add_warn <ID> <–ø—Ä–∏—á–∏–Ω–∞> - –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n"
        "/get_warns <ID> - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "/delete_warn <ID> - —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n"
        "/clear_warns <ID> - –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n"
        "/warn_list - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π\n"
        "/set_admin_group - –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –≥—Ä—É–ø–ø—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞"
    )

@bot.message_handler(commands=['add_admin'])
def add_admin(message):
    if not is_owner(message.from_user.id):
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    parts = message.text.split()
    if len(parts) != 2 or not parts[1].isdigit():
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü—Ä–∏–º–µ—Ä: /add_admin <id>")
        return
    new_admin_id = int(parts[1])
    if new_admin_id in ADMIN_LIST:
        bot.send_message(message.chat.id, "‚ÑπÔ∏è –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º.")
    else:
        ADMIN_LIST.append(new_admin_id)
        bot.send_message(message.chat.id, f"‚úÖ –ù–æ–≤—ã–π –∞–¥–º–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω: {new_admin_id}")

@bot.message_handler(commands=['remove_admin'])
def remove_admin(message):
    if not is_owner(message.from_user.id):
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    parts = message.text.split()
    if len(parts) != 2 or not parts[1].isdigit():
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü—Ä–∏–º–µ—Ä: /remove_admin <id>")
        return
    del_id = int(parts[1])
    if del_id in [ROONYA, DARLIN]:
        bot.send_message(message.chat.id, "üö´ –ù–µ–ª—å–∑—è —É–±—Ä–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞.")
        return
    if del_id in ADMIN_LIST:
        ADMIN_LIST.remove(del_id)
        bot.send_message(message.chat.id, f"‚úÖ –ê–¥–º–∏–Ω {del_id} —É–±—Ä–∞–Ω.")
    else:
        bot.send_message(message.chat.id, "‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω.")

@bot.message_handler(commands=['admin_list'])
def list_admins(message):
    if not is_admin(message):
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    text = "üëë Admin list:\n" + "\n".join([f"- {admin_id}" for admin_id in ADMIN_LIST])
    bot.send_message(message.chat.id, text)

# ========= Ban and Warn System =========
@bot.message_handler(commands=['ban'])
def ban_user(message):
    if not is_admin(message):
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    parts = message.text.split(maxsplit=2)
    if len(parts) < 3:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü—Ä–∏–º–µ—Ä: /ban <ID> <reason>")
        return
    user_id, reason = parts[1], parts[2]
    try:
        with open(BAN_FILE, "a", encoding="utf-8") as f:
            f.write(f"{user_id} - {reason}\n")
        bot.send_message(message.chat.id, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞: {e}")

@bot.message_handler(commands=['save_ban_reason'])
def save_ban_reason(message):
    if not is_admin(message):
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    msg = bot.send_message(message.chat.id, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ ID –∏ –ø—Ä–∏—á–∏–Ω—É (123456789 —Å–ø–∞–º):")
    bot.register_next_step_handler(msg, lambda m: write_ban_reason(m))

def write_ban_reason(message):
    try:
        parts = message.text.strip().split(maxsplit=1)
        if len(parts) != 2:
            bot.send_message(message.chat.id, "‚ùå –ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–º–µ—Ä: 123456789 –ø—Ä–∏—á–∏–Ω–∞")
            return
        with open(BAN_FILE, "a", encoding="utf-8") as f:
            f.write(f"{parts[0]} - {parts[1]}\n")
        bot.send_message(message.chat.id, "‚úÖ –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–µ–∞.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå Error: {e}")

@bot.message_handler(commands=['ban_reason'])
def get_ban_reason(message):
    msg = bot.send_message(message.chat.id, "üîç –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    bot.register_next_step_handler(msg, lambda m: find_ban_reason(m))

def find_ban_reason(message):
    user_id = message.text.strip()
    try:
        with open(BAN_FILE, "r", encoding="utf-8") as f:
            matches = [line.strip() for line in f if line.startswith(f"{user_id} ")]
        if matches:
            bot.send_message(message.chat.id, "üìÑ –ù–∞–π–¥–µ–Ω–æ:\n" + "\n".join(matches))
        else:
            bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞: {e}")

@bot.message_handler(commands=['delete_ban_reason'])
def delete_ban_reason(message):
    msg = bot.send_message(message.chat.id, "üóë –í–≤–µ–¥–∏—Ç–µ ID:")
    bot.register_next_step_handler(msg, lambda m: remove_ban_reason(m))

def remove_ban_reason(message):
    user_id = message.text.strip()
    try:
        with open(BAN_FILE, "r", encoding="utf-8") as f:
            lines = f.readlines()
        new_lines = [line for line in lines if not line.startswith(f"{user_id} ")]
        if len(new_lines) == len(lines):
            bot.send_message(message.chat.id, "‚ÑπÔ∏è –ü—Ä–∏—á–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            return
        with open(BAN_FILE, "w", encoding="utf-8") as f:
            f.writelines(new_lines)
        bot.send_message(message.chat.id, f"‚úÖ –ü—Ä–∏—á–∏–Ω–∞ {user_id} —É–±—Ä–∞–Ω–∞.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞: {e}")

@bot.message_handler(commands=['ban_list'])
def list_bans(message):
    try:
        with open(BAN_FILE, "r", encoding="utf-8") as f:
            content = f.read()
        if not content:
            bot.send_message(message.chat.id, "üì≠ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")
            return
        for i in range(0, len(content), 4096):
            bot.send_message(message.chat.id, content[i:i+4096])
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞: {e}")

@bot.message_handler(commands=['add_warn'])
def add_warn(message):
    if not is_admin(message):
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    parts = message.text.split(maxsplit=2)
    if len(parts) < 3:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü—Ä–∏–º–µ—Ä: /add_warn <ID> <reason>")
        return
    user_id, reason = parts[1], parts[2]
    try:
        with open(WARN_FILE, "a+", encoding="utf-8") as f:
            f.seek(0)
            warns = [line for line in f if line.startswith(f"{user_id} -")]
            if len(warns) >= 3:
                bot.send_message(message.chat.id, f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ –∏–º–µ–µ—Ç 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.")
                return
            f.write(f"{user_id} - {reason}\n")
        bot.send_message(message.chat.id, "‚úÖ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–æ.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞: {e}")

@bot.message_handler(commands=['get_warns'])
def get_warns(message):
    parts = message.text.split()
    if len(parts) != 2:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü—Ä–∏–º–µ—Ä: /get_warns <ID>")
        return
    user_id = parts[1]
    try:
        with open(WARN_FILE, "r", encoding="utf-8") as f:
            warns = [line.strip() for line in f if line.startswith(f"{user_id} -")]
        if warns:
            bot.send_message(message.chat.id, "üìã –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:\n" + "\n".join(warns))
        else:
            bot.send_message(message.chat.id, "‚úÖ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞: {e}")

@bot.message_handler(commands=['delete_warn'])
def delete_warn(message):
    parts = message.text.split()
    if len(parts) != 2:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü—Ä–∏–º–µ—Ä: /delete_warn <ID>")
        return
    user_id = parts[1]
    try:
        with open(WARN_FILE, "r", encoding="utf-8") as f:
            lines = f.readlines()
        removed = False
        new_lines = []
        for line in reversed(lines):
            if not removed and line.startswith(f"{user_id} -"):
                removed = True
                continue
            new_lines.insert(0, line)
        if removed:
            with open(WARN_FILE, "w", encoding="utf-8") as f:
                f.writelines(new_lines)
            bot.send_message(message.chat.id, "‚úÖ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É–±—Ä–∞–Ω–æ.")
        else:
            bot.send_message(message.chat.id, "‚ÑπÔ∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞: {e}")

@bot.message_handler(commands=['clear_warns'])
def clear_warns(message):
    parts = message.text.split()
    if len(parts) != 2:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü—Ä–∏–º–µ—Ä: /clear_warns <ID>")
        return
    user_id = parts[1]
    try:
        with open(WARN_FILE, "r", encoding="utf-8") as f:
            lines = f.readlines()
        new_lines = [line for line in lines if not line.startswith(f"{user_id} -")]
        with open(WARN_FILE, "w", encoding="utf-8") as f:
            f.writelines(new_lines)
        bot.send_message(message.chat.id, "‚úÖ –í—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è —É–±—Ä–∞–Ω—ã.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞: {e}")

@bot.message_handler(commands=['warn_list'])
def list_warns(message):
    try:
        with open(WARN_FILE, "r", encoding="utf-8") as f:
            content = f.read()
        if not content:
            bot.send_message(message.chat.id, "üì≠ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")
            return
        for i in range(0, len(content), 4096):
            bot.send_message(message.chat.id, content[i:i+4096])
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞: {e}")

@bot.message_handler(commands=['set_admin_group'])
def set_admin_group(message):
    if message.chat.type in ['group', 'supergroup']:
        with open(ADMIN_CHAT_FILE, "w") as f:
            f.write(str(message.chat.id))
        bot.reply_to(message, "‚úÖ –≠—Ç–∞ –≥—Ä—É–ø–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞–∫ –≥—Ä—É–ø–ø–∞ –∞–¥–º–∏–Ω–æ–≤.")
    else:
        bot.reply_to(message, "‚ùó –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø–µ, –≥–¥–µ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω.")

@bot.message_handler(commands=['contact_admin'])
def start_admin_chat(message):
    try:
        with open(ADMIN_CHAT_FILE, "r") as f:
            group_id = int(f.read().strip())
    except:
        bot.reply_to(message, "‚ùå –ì—Ä—É–ø–ø–∞ –∞–¥–º–∏–Ω–æ–≤ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
        return

    user_chat_sessions[message.from_user.id] = group_id
    bot.send_message(message.chat.id, "üì® –í—ã –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥ —Å –∞–¥–º–∏–Ω–æ–º. –í—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω—Å–∫—É—é –≥—Ä—É–ø–ø—É. –ù–∞–ø–∏—à–∏—Ç–µ /–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å_—Ä–∞–∑–≥–æ–≤–æ—Ä_—Å_–∞–¥–º–∏–Ω–æ–º –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.")

@bot.message_handler(commands=['stop_admin_chat'])
def stop_admin_chat(message):
    if message.from_user.id in user_chat_sessions:
        del user_chat_sessions[message.from_user.id]
        bot.send_message(message.chat.id, "‚úÖ –î–∏–∞–ª–æ–≥ —Å –∞–¥–º–∏–Ω–æ–º –∑–∞–≤–µ—Ä—à—ë–Ω.")
    else:
        bot.send_message(message.chat.id, "‚ÑπÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞.")

@bot.message_handler(func=lambda message: message.from_user.id in user_chat_sessions)
def forward_message_to_admin(message):
    group_id = user_chat_sessions.get(message.from_user.id)
    if group_id:
        user_info = f"@{message.from_user.username}" if message.from_user.username else f"ID: {message.from_user.id}"
        forward_text = f"‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_info}:\n{message.text}"
        bot.send_message(group_id, forward_text)

bot.polling()